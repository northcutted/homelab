version: "3.8"

x-defaults: &defaults
  restart: unless-stopped
  logging:
    driver: loki
    options:
      loki-url: "http://localhost:3100/loki/api/v1/push"

services:
  cadvisor:
    <<: *defaults
    container_name: cadvisor_docker
    image: gcr.io/cadvisor/cadvisor:latest
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    ports:
      - "8888:8080"
    privileged: true
    devices:
      - /dev/kmsg
    networks:
      - docker
  transmission-openvpn:
    <<: *defaults
    container_name: transmission
    image: haugene/transmission-openvpn
    cap_add:
      - NET_ADMIN
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/transmission:/config:rw
      - ${DOCKERSTORAGEDIR}/torrents:/northflix/torrents:rw
    dns:
      - 1.1.1.1
      - 8.8.8.8
    devices:
      - "/dev/net/tun:/dev/net/tun"
    environment:
      - OPENVPN_PROVIDER=PIA
      - OPENVPN_CONFIG=netherlands
      - OPENVPN_USERNAME=${VPN_USER}
      - OPENVPN_PASSWORD=${VPN_PASS}
      - OPENVPN_OPTS=--inactive 3600 --ping 10 --ping-exit 60
      - LOCAL_NETWORK=${LAN_NETWORK}
      - TRANSMISSION_WEB_UI=kettu
      - TRANSMISSION_RATIO_LIMIT=0
      - TRANSMISSION_RATIO_LIMIT_ENABLED=true
      - TRANSMISSION_DOWNLOAD_DIR=/northflix/torrents/completed
      - TRANSMISSION_INCOMPLETE_DIR=/northflix/torrents/incomplete
      - TRANSMISSION_WATCH_DIR=/northflix/torrents/watch
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=022
    ports:
      - '9091:9091'
    networks:
      - docker
  sabnzbd:
    <<: *defaults
    container_name: sabnzbd
    image: ghcr.io/hotio/sabnzbd:latest
    ports:
      - 8080:8080
      - 9090:9090
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/sabnzbd:/config:rw
      - ${DOCKERSTORAGEDIR}/usenet:/northflix/usenet:rw
    networks:
      - docker
  prowlarr:
    <<: *defaults
    container_name: prowlarr
    image: ghcr.io/hotio/prowlarr:nightly
    networks:
      - docker
    ports:
      - "9696:9696"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=002
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/prowlarr:/config:rw
  radarr:
    <<: *defaults
    container_name: radarr
    image: ghcr.io/hotio/radarr:latest
    networks:
      - docker
    ports:
      - 7878:7878
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/radarr:/config
      - ${DOCKERSTORAGEDIR}:/northflix
  sonarr:
    <<: *defaults
    container_name: sonarr
    image: ghcr.io/hotio/sonarr:latest
    networks:
      - docker
    ports:
      - 8989:8989
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/sonarr:/config
      - ${DOCKERSTORAGEDIR}:/northflix
  bazarr:
    <<: *defaults
    container_name: bazarr
    image: ghcr.io/hotio/bazarr:nightly
    networks:
      - docker
    ports:
      - 6767:6767
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/bazarr:/config
      - ${DOCKERSTORAGEDIR}/media:/northflix/media
  plex:
    <<: *defaults
    container_name: plex
    image: ghcr.io/hotio/plex
    networks:
      - docker
    ports:
      - 32400:32400
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=002
      - ARGS=
      - PLEX_CLAIM_TOKEN=${PLEX_CLAIM}
      - PLEX_ADVERTISE_URL=${PLEX_ADVERTISE_IP}
      - ALLOWED_NETWORKS=10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
      - PLEX_NO_AUTH_NETWORKS=${SUBNET HERE}
      - PLEX_PASS=${PLEX_PASS}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/plex:/config:rw
      - ${DOCKERSTORAGEDIR}/media:/northflix/media:rw
  cloudflared:
    <<: *defaults
    container_name: cloudflared
    image: cloudflare/cloudflared:latest
    networks:
      - tunnel
    dns:
      - 1.1.1.1
      - 1.0.0.1
    entrypoint: "cloudflared tunnel --no-autoupdate run --token ${CF_TOKEN}"
  overseerr:
    <<: *defaults
    image: lscr.io/linuxserver/overseerr
    container_name: overseerr
    networks:
      - tunnel
      - docker
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKERCONFDIR}/overseerr/config:/config
    ports:
      - 5055:5055
  loki:
    container_name: loki
    image: grafana/loki:latest
    user: ${PUID}
    volumes:
      - ${DOCKERCONFDIR}/loki:/etc/loki
    ports:
      - "3100:3100"
    restart: unless-stopped
    command: -config.file=/etc/loki/loki-config.yml
    networks:
      - loki
  promtail:
    container_name: promtail
    image: grafana/promtail:latest
    volumes:
      - /var/log:/var/log
      - ${DOCKERCONFDIR}/promtail:/etc/promtail
    # ports:
    #   - "1514:1514" # this is only needed if you are going to send syslogs
    restart: unless-stopped
    command: -config.file=/etc/promtail/promtail-config.yml
    networks:
      - loki
  grafana:
    <<: *defaults
    container_name: grafana
    image: grafana/grafana:latest
    user: ${PUID}
    volumes:
    - ${DOCKERCONFDIR}/grafana:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - loki
      - docker
  prometheus:
      <<: *defaults
      image: prom/prometheus
      container_name: prometheus
      user: "${PUID}:${PGID}"
      environment:
        - PUID=${PUID}
        - PGID=${PGID}
        - TZ=${TZ}
      networks:
        - loki
        - docker
      ports:
        - "9092:9090"
      volumes:
        - ${DOCKERCONFDIR}/prometheus/configs/prometheus.yml:/etc/prometheus/prometheus.yml
        - ${DOCKERCONFDIR}/prometheus/data/prometheus:/prometheus
  alertmanager:
    <<: *defaults
    image: prom/alertmanager
    container_name: alertmanager
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - loki
      - docker
    ports:
      - "9093:9093"
    volumes:
      - ${DOCKERCONFDIR}/alertmanager/data/alertmanager:/alertmanager
  node-exporter:
    <<: *defaults
    privileged: true
    image: prom/node-exporter
    container_name: node-exporter
    networks:
      - loki
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.ignored-mount-points"
      - "^/(rootfs/)?(dev|etc|host|proc|run|sys|volume1)($$|/)"
  tautulli:
    <<: *defaults
    image: lscr.io/linuxserver/tautulli:latest
    container_name: tautulli
    networks:
      - docker
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKERCONFDIR}/tautulli/config:/config
    ports:
      - 8181:8181
    restart: unless-stopped
networks:
  tunnel:
    driver: bridge
    name: tunnel
  docker:
    driver: bridge
    name: docker
  loki:
    driver: bridge
    name: loki


